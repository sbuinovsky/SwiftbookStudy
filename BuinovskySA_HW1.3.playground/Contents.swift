import Foundation

/*
 Задание 1
 Представьте, что вы владелец розничного магазина и вам необходимо установить стоимость товара в зависимости от его количества. До 9 единиц товара включительно цена составляет 1000 рублей за штуку. От 10 до 19 единиц товара включительно - 800 руб. шт. И 600 рублей за товар от 20 единиц и выше. Создайте условие, при котором цене будет присвоено соответствующее значение, используя конструкцию if-else. Подсчитайте общую сумму и выведите результат на консоль.
 */

let quantity = 9
let price: Int
let sum: Int

if quantity > 0 && quantity < 9 {
    price = 1000
} else if quantity >= 9 && quantity <= 19 {
    price = 800
} else if quantity >= 20 {
    price = 600
} else {
    price = 0
    print("Incorrect value of quantity.")
}

sum = price * quantity
print("Сумма покупок равна \(sum) руб.")


/*
 Задание 2
 Объявите свойство userInputAge с типом String и присвойте ему значение "34e" для моделирования опечатки.  Затем определите свойство userAge с явно заданным типом Int и присвойте ему целочисленное значение, извлеченное из свойства userInputAge.  Какую ошибку Вы получаете? Объясните, что это значит.
 */

var userInputAge = "34e"

// var userAge: Int = Int(userInputAge)
// Ошибка "Value of optional type 'Int?' must be unwrapped to a value of type 'Int'" означает что значение опционального типа получаемого при использовании функции Int() должно быть извлечено до его присвоения константе userAge с явно заданным неопциональным типом Int

/*
 Теперь поменяйте тип userAge на Int?, и выведите в консоль значение userAge.  Почему значение userAge равно nil?  Ответьте в комментарии или внутри print.
 */
var userAge = Int(userInputAge)
print("Значение userAge = \(userAge), потому что функция Int() возвращает nil в том случае если переданный ей параметр не может быть приведен к типу Int и опциональный Int? в том случае если преобразование удалось")

/*
 Теперь исправьте опечатку в значении userInputAge.  Что-нибудь в результатах вывода кажется Вам неуместным?
 Снова выведите в консоль userAge, но теперь извлеките userAge с помощью оператора «!».
 */
userInputAge = "34"
userAge = Int(userInputAge)
print("\(userAge) неуместным кажется Optional перед числом при выводе на консоль")
print("userAge = \(userAge!)")

/*
 Используйте привязку опционалов для извлечения userAge.  Если userAge содержит значение, то выведите его в консоль.
 */

if let userAgeAsInt = userAge {
    print("userAge = \(userAgeAsInt)")
}

/*
 Теперь снова эмулируйте опечатку и попробуйте вывести на консоль целочисленное значение переменной userInputAge при помощи оператора "!". Какую ошибку вы получаете? Почему?
 */
userInputAge = "34e"
// print(Int(userInputAge)!)
// Получаем падение приложения по причине принудительного извлечения опционального типа возвращаемого из функции Int() в котором оказался nil как и говорится в тексте ошибки в консоли "Unexpected found nil while unwrapping an Optional value"


/*
 Задание 3*
Создайте три уровня готовности к чрезвычайным ситуациям: A, B и C. Каждая степень должна предусматривать ряд мероприятий, причем каждый последующий уровень должен включать в себя мероприятия предыдущих уровней. В зависимости от переданного уровня необходимо вывести на консоль все предназначенные мероприятия. При этом минимальный уровень готовности — это C, максимальный — A (включает в себя мероприятия уровней B и C).
В случае возникновения ситуации A необходимо "Выключить все электрические приборы". B - "Закрыть входные двери и окна". C - "Соблюдать спокойствие"
*/

let readinessMarker = "A"

switch readinessMarker {
case "A":
    print("Выключить все электрические приборы")
    fallthrough
case "B":
    print("Закрыть входные двери и окна")
    fallthrough
case "C":
    print("Соблюдать спокойствие")
default:
    break
}

// Работает как описано в задании но не очень понимаю как у меня захватывается "C" при степенях готовности "А" и "В" просьба ответить в фидбэке
// Из того что я нашел в интернете получается что при использовании fallthrough следующий после него case исполняется даже если в нем нет соответствие входному значению


/*
Задание 4*
В этом задании вам необходимо отсортировать конфеты M&M's по цвету и по начинке. В первую кучку нужно собрать красные конфеты с шоколадом внутри. Во вторую кучку соберите все желтые конфеты с орехами. А в третью кучку коричневые и зеленые с шоколадом внутри. Нужно реализовать только логику для сортировки конфет. Использовать кортежи при этом не нужно.
*/

let candyColor = "green"
let candyFilling = "chocolate"

switch candyColor {
case "red" where candyFilling == "chocolate":
    print("Red with chocolate filling")
case "yellow" where candyFilling == "nuts":
    print("Yellow with nuts filling")
case "brown" where candyFilling == "chocolate", "green" where candyFilling == "chocolate":
    print("Brown or green with chocolate filling")
default:
    break
}
